/*
 * BQ_common.h
 *
 *  Created on: Jul 28, 2024
 *      Author: frank
 */

#ifndef INC_BQ_COMMON_H_
#define INC_BQ_COMMON_H_

#include "stdbool.h"
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include "BQ769x2Header.h"

typedef enum
{
	BMS_STATE_OFF,      ///< Off state (charging and discharging disabled)
	BMS_STATE_CHG,      ///< Charging state (discharging disabled)
	BMS_STATE_DIS,      ///< Discharging state (charging disabled)
	BMS_STATE_NORMAL,   ///< Normal operating mode (both charging and discharging enabled)
	BMS_STATE_SHUTDOWN, ///< BMS starting shutdown sequence

} bms_state;

typedef struct
{
	bms_state bms_state;

	/** Manual enable/disable setting for charging */
	bool charge_enable;
	/** Manual enable/disable setting for discharging */
	bool discharge_enable;

	/** CV charging to cell_chg_voltage_limit finished */
	bool battery_full;
	/** Battery is discharged below cell_dis_voltage_limit */
	bool battery_empty;

	/** Calculated State of Charge (%) */
	float soc;

	/** Nominal capacity of battery pack (Ah) */
	float nominal_capacity_Ah;

	uint16_t Stack_Voltage;
	uint16_t Pack_Voltage;
	uint16_t LD_Voltage;
	//uint16_t Pack_Current = 0x00;

	uint8_t bms_device;

}bms_context;

bool bms_charge_error();

bool bms_discharge_error();

bool bms_charge_allowed(bms_context *bms);

bool bms_discharge_allowed(bms_context *bms);

void bms_state_machine(bms_context *bms);

//void BQ769x2_ReadAllVoltages(bms_context *bms);

#endif /* INC_BQ_COMMON_H_ */
