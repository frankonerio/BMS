/*
 * BQ_common.c
 *
 *  Created on: Jul 28, 2024
 *      Author: frank
 */

#include <bq_common.h>



bool bms_charge_error()
{
    return ProtectionsTriggered && (OV_Fault || SCD_Fault || OCD_Fault);
}

bool bms_discharge_error()
{
    return ProtectionsTriggered && (UV_Fault || SCD_Fault || OCD_Fault);
}


bool bms_charge_allowed(bms_context *bms)
{

    return !bms->battery_full && !bms_charge_error() && bms->charge_enable;
}

bool bms_discharge_allowed(bms_context *bms)
{
    // Use logical AND (&&) for combining boolean conditions
    return !bms->battery_empty && !bms_discharge_error() && bms->discharge_enable;
}


void bms_state_machine(bms_context *bms){
	switch (bms->bms_state) {
		case BMS_STATE_OFF:
			if (bms_discharge_allowed(bms)) {
				//bms_ic_set_switches(bms->ic_dev, BMS_SWITCH_DIS, true);
				CommandSubcommands(ALL_FETS_ON);
				bms->bms_state = BMS_STATE_DIS;
				//LOG_INF("OFF -> DIS (error flags: 0x%08x)", bms->ic_data.error_flags);
			}
			else if (bms_charge_allowed(bms)) {
				//bms_ic_set_switches(bms->ic_dev, BMS_SWITCH_CHG, true);
				CommandSubcommands(ALL_FETS_ON);
				bms->bms_state = BMS_STATE_CHG;
				//LOG_INF("OFF -> CHG (error flags: 0x%08x)", bms->ic_data.error_flags);
			}
			break;

		case BMS_STATE_CHG:
			if (!bms_charge_allowed(bms)) {
				//bms_ic_set_switches(bms->ic_dev, BMS_SWITCH_CHG, false);
				/* DIS switch may be on on because of ideal diode control */
				//bms_ic_set_switches(bms->ic_dev, BMS_SWITCH_DIS, false);
				//CommandSubcommands(ALL_FETS_OFF);
				bms->bms_state = BMS_STATE_OFF;
				//LOG_INF("CHG -> OFF (error flags: 0x%08x)", bms->ic_data.error_flags);
			}
			else if (bms_discharge_allowed(bms)) {
				CommandSubcommands(ALL_FETS_ON);
				bms->bms_state = BMS_STATE_NORMAL;
				//LOG_INF("CHG -> NORMAL (error flags: 0x%08x)", bms->ic_data.error_flags);
			}
			break;

		case BMS_STATE_DIS:
			if (!bms_discharge_allowed(bms)) {
				//CommandSubcommands(ALL_FETS_OFF);
				bms->bms_state = BMS_STATE_OFF;
				//LOG_INF("DIS -> OFF (error flags: 0x%08x)", bms->ic_data.error_flags);
			}
			else if (bms_charge_allowed(bms)) {
				CommandSubcommands(ALL_FETS_ON);
				bms->bms_state = BMS_STATE_NORMAL;
				//LOG_INF("DIS -> NORMAL (error flags: 0x%08x)", bms->ic_data.error_flags);
			}
			break;

		case BMS_STATE_NORMAL:
			if (!bms_discharge_allowed(bms)) {
				//CommandSubcommands(ALL_FETS_OFF);
				bms->bms_state = BMS_STATE_CHG;
				//LOG_INF("NORMAL -> CHG (error flags: 0x%08x)", bms->ic_data.error_flags);
			}
			else if (!bms_charge_allowed(bms)) {
				//CommandSubcommands(ALL_FETS_OFF);
				bms->bms_state = BMS_STATE_DIS;
				//LOG_INF("NORMAL -> DIS (error flags: 0x%08x)", bms->ic_data.error_flags);
			}
			break;

		case BMS_STATE_SHUTDOWN:
			/* do nothing and wait until shutdown is completed */
			break;
	    }
}


